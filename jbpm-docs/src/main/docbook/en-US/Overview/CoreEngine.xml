<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook" version="5.0" xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd" xml:base="../">
  <title>Core Engine</title>
 <para>The core jBPM engine is the heart of the project.  It's a light-weight workflow
    engine that executes your business processes.  It can be embedded as part of your application
    or deployed as a service (possibly on the cloud).  Its most important features are the following:
      <itemizedlist>
        <listitem><para>Solid, stable core engine for executing your process instances.</para></listitem>
        <listitem><para>Native support for the latest BPMN 2.0 specification for modeling and
        executing business processes.</para></listitem>
        <listitem><para>Strong focus on performance and scalability.</para></listitem>
        <listitem><para>Light-weight (can be deployed on almost any device that supports
        a simple Java Runtime Environment; does not require any web container at all).</para></listitem>
        <listitem><para>(Optional) pluggable persistence with a default JPA implementation.</para></listitem>
        <listitem><para>Pluggable transaction support with a default JTA implementation.</para></listitem>
        <listitem><para>Implemented as a generic process engine, so it can be extended to support
        new node types or other process languages.</para></listitem>
        <listitem><para>Listeners to be notified of various events.</para></listitem>
        <listitem><para>Ability to migrate running process instances to a new version of their
        process definition</para></listitem>
      </itemizedlist>
    </para>
    
    <para>The core engine can also be integrated with a few other (independent) core services:
      <itemizedlist>
        <listitem><para>The human task service can be used to manage human tasks when human
        actors need to participate in the process.  It is fully pluggable and the default
        implementation is based on the WS-HumanTask specification and manages the life
        cycle of the tasks, task lists, task forms, and some more advanced features like
        escalation, delegation, rule-based assignments, etc.</para></listitem>
        <listitem><para>The history log can store all information about the execution of all the
        processes in the engine.  This is necessary if you need access to historic information
        as runtime persistence only stores the current state of all active process instances.
        The history log can be used to store all current and historic states of active and completed
        process instances.  It can be used to query for any information related to the execution
        of process instances, for monitoring, analysis, etc.</para></listitem>
      </itemizedlist>
    </para>
</section>
